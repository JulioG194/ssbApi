_id: spc_4b9f12912ff2403296c5d25874e90212
type: ApiSpec
parentId: wrk_90a88c6b9cbd4772a10e3e2e8010317d
modified: 1606189204679
created: 1606093176477
fileName: Imported Workspace
contents: >
  openapi: "3.0.0"

  info:
    version: 1.0.0
    title: Super Smash Bros Api
    description: A simple API based on popular videogame 
    termsOfService: https://warm-shore-85713.herokuapp.com/terms
    contact:
      name: Julio Gonzalez
      email: julio.gonzalez2014a@gmail.com
      url: https://warm-shore-85713.herokuapp.com/
    license:
      name: Apache 2.0
      url: https://www.apache.org/licenses/LICENSE-2.0.html
  servers:
    - url: https://warm-shore-85713.herokuapp.com/
  paths:
    /characters:
      get:
        description: Awesome API
        operationId: getCharacters
        parameters:
          - name: tags
            in: query
            description: tags to filter by
            required: false
            style: form
            schema:
              type: array
              items:
                type: string
          - name: limit
            in: query
            description: maximum number of results to return
            required: false
            schema:
              type: integer
              format: int32
        responses:
          '200':
            description: character response
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Character'
          default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
      post:
        description: Creates a new character in the store. Duplicates aren't allowed
        operationId: addCharacter
        requestBody:
          description: Character to add to the stage
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewCharacter'
        responses:
          '200':
            description: character response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Character'
          default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
    /characters/{id}:
      get:
        description: Returns a user based on a single ID, if the user does not have access to the character
        operationId: find character by id
        parameters:
          - name: id
            in: path
            description: ID of character to fetch
            required: true
            schema:
              type: integer
              format: int64
        responses:
          '200':
            description: character response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Character'
          default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
      delete:
        description: deletes a single character based on the ID supplied
        operationId: deleteCharacter
        parameters:
          - name: id
            in: path
            description: ID of character to delete
            required: true
            schema:
              type: integer
              format: int64
        responses:
          '204':
            description: character deleted
          default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  components:
    schemas:
      Character:
        allOf:
          - $ref: '#/components/schemas/NewCharacter'
          - type: object
            required:
            - id
            properties:
              id:
                type: integer
                format: int64

      NewCharacter:
        type: object
        required:
          - name
          - game
          - gender
          - kind
          - createdBy
          - skills
          - imageURL
          - description
        properties:
          name:
            type: string
          game:
            type: string
          gender:
            type: string
          kind:
            type: string
          createdBy:
            type: string
          skills:
            type: array
            format: string
          imageURL:
            type: string 
          description:
            type: string    

      Error:
        type: object
        required:
          - code
          - message
        properties:
          code:
            type: integer
            format: int32
          message:
            type: string
contentType: yaml
